/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package studentmanagementsystem2;

/**
 *
 * @author dinuw
 */
public class GradefForm extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(GradefForm.class.getName());

    /**
     * Creates new form GradefForm
     */
    public GradefForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jPanel1ComponentAdded(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Course");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 50, 20));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 150, -1));

        jTextField1.setText("jTextField1");
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Grade");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 50, 20));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Student");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 50, 20));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 150, -1));

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setText("View Grades");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 100, 30));

        jButton2.setBackground(new java.awt.Color(204, 255, 204));
        jButton2.setText("Assign Grade");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 100, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student Name", "Course Name", "Grade"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, 170));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 520, 430));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
private void btnViewGradesActionPerformed(java.awt.event.ActionEvent evt) {
    DefaultTableModel model = (DefaultTableModel) gradesTable.getModel();
    model.setRowCount(0); // Clear existing data

    ComboItem selectedStudent = (ComboItem) cmbStudent.getSelectedItem();
    ComboItem selectedCourse = (ComboItem) cmbCourse.getSelectedItem();

    try (Connection conn = DatabaseConnection.getConnection()) {
        String sql = "SELECT s.name AS student_name, c.course_name, e.grade " +
                     "FROM Enrollments e " +
                     "JOIN Students s ON e.student_id = s.student_id " +
                     "JOIN Courses c ON e.course_id = c.course_id " +
                     "WHERE 1=1";
        // Filter by selected student or course if desired
        if (selectedStudent != null) {
            sql += " AND s.student_id = " + selectedStudent.getId();
        }
        if (selectedCourse != null) {
            sql += " AND c.course_id = " + selectedCourse.getId();
        }
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);

        while (rs.next()) {
            String studentName = rs.getString("student_name");
            String courseName = rs.getString("course_name");
            String grade = rs.getString("grade");
            model.addRow(new Object[]{studentName, courseName, grade});
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
private void btnAssignGradeActionPerformed(java.awt.event.ActionEvent evt) {
    ComboItem selectedStudent = (ComboItem) cmbStudent.getSelectedItem();
    ComboItem selectedCourse = (ComboItem) cmbCourse.getSelectedItem();
    String grade = txtGrade.getText();

    if (selectedStudent == null || selectedCourse == null || grade.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please select student, course, and enter a grade.");
        return;
    }
    int studentId = selectedStudent.getId();
    int courseId = selectedCourse.getId();

    try (Connection conn = DatabaseConnection.getConnection()) {
        // Check if enrollment exists
        String checkSql = "SELECT * FROM Enrollments WHERE student_id=? AND course_id=?";
        PreparedStatement checkPst = conn.prepareStatement(checkSql);
        checkPst.setInt(1, studentId);
        checkPst.setInt(2, courseId);
        ResultSet rs = checkPst.executeQuery();

        if (rs.next()) {
            // Enrollment exists, update grade
            String updateSql = "UPDATE Enrollments SET grade=? WHERE student_id=? AND course_id=?";
            PreparedStatement pst = conn.prepareStatement(updateSql);
            pst.setString(1, grade);
            pst.setInt(2, studentId);
            pst.setInt(3, courseId);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Grade assigned/updated successfully!");
        } else {
            JOptionPane.showMessageDialog(this, "Student is not enrolled in the selected course.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jPanel1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jPanel1ComponentAdded
// Call this method in your GradeForm constructor or formWindowOpened event
private void populateComboBoxes() {
    // Populate Students
    try (Connection conn = DatabaseConnection.getConnection()) {
        String sql = "SELECT student_id, name FROM Students";
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        cmbStudent.removeAllItems();
        while (rs.next()) {
            int id = rs.getInt("student_id");
            String name = rs.getString("name");
            cmbStudent.addItem(new ComboItem(name, id));
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading students: " + e.getMessage());
    }

    // Populate Courses
    try (Connection conn = DatabaseConnection.getConnection()) {
        String sql = "SELECT course_id, course_name FROM Courses";
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        cmbCourse.removeAllItems();
        while (rs.next()) {
            int id = rs.getInt("course_id");
            String name = rs.getString("course_name");
            cmbCourse.addItem(new ComboItem(name, id));
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading courses: " + e.getMessage());
    }
}        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1ComponentAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new GradefForm().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
